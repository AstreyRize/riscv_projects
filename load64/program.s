# Загрузить 0x1234567890ABCDEF в регистр x5

.global _start  # Указать стартовый адрес программы редактору связей

_start: lui x5, 0x12345  # x5 = 0x12345000
slli x5, x5, 32          # x5 = 0x1234500000000000
addi x6, x0, 0x678       # x6 = 0x679
slli x6, x6, 32          # x6 = 0x67900000000
add x5, x5, x6           # x5 = 0x1234567900000000

# Ниже автор книги воспользовался методом дополнительного кода из начала книги
# он инвертировал все нули в единицы, но единицу он прибавил в 12345678 и получил 12345679
# после чего произвел сложение и получил результат за одну операцию addi вместо двух операций в псевдоинструкции li.
# addi x6, x0, 0xFFFFFFFFFFFFF90B  # x6 = 0x90B
li x6, 0x000000000000090A

slli x6, x6, 20                  # x6 = 0x90B00000
add x5, x5, x6                   # x5 = 0x1234567890B00000

# Снова хитрость с кодом из начала книги.
# addi x6, x0, 0xFFFFFFFFFFFFFBCD  # x6 = 0xBCD
li x6, 0x0000000000000BCD

slli x6, x6, 8                   # x6 = 0xBCDO0
add x5, x5, x6                   # x5 = 0x1234567890ABCD00

addi x5, x5, 0xEF                # x5 = 0x1234567890ABCDEF

# Задать параметры для завершения работы программы
# и вызвать Linux для завершения.

mv a0, x0  # Использовать код возврата 0
li a7, 93  # Код 93 служебной команды завершает программу
ecall      # Вызвать Linux, чтобы завершить программу
